version: v1alpha1 # Indicates the schema used to decode the contents.
debug: false # Enable verbose logging to the console.
persist: true
# Provides machine specific configuration options.
machine:
    type: worker # Defines the role of the machine within the cluster.
    token: v26s2g.g2wbfh2rxnt55v7d # The `token` is used by a machine to join the PKI of the cluster.
    # The root certificate authority of the PKI.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBanROakhDb05YTEVZM0JtcWZOWWRaakFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qUXhNakkzTVRBek1UUTFXaGNOTXpReE1qSTFNVEF6TVRRMVdqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQUh5MXRmYWpRVEsvUVhBWFpxUzlDbGhOYnJHNElPUzFMVFEwClVhb3NxWFF0bzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk1UY0NMK1JVbXc0WnlzNQpQSE5zcXJxQ3liWmNNQVVHQXl0bGNBTkJBQzJBcDlGQ1BXWVlDMStxNWlYV2ZrS0g1dlQ2bGVRc0xZa0FSaGJ2ClVxZGdyZm9jNFBvSW1KQTl2T3orbk5sYTRDZERjWCtXVkNOWFVsM3BaRVZjQ2d3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJTXlHelBiTUJuZWRSLzJxb0VkeHRmQ2VhT0ozUGdCNTdKWGRVRVVYTWo0SwotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10

    # Used to provide additional options to the kubelet.
    kubelet:
        image: ghcr.io/siderolabs/kubelet:v1.31.1 # The `image` field is an optional reference to an alternative kubelet image.
        # The `extraConfig` field is used to provide kubelet configuration overrides.
        extraConfig:
            maxPods: 512
        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.
        # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
        nodeIP:
            # The `validSubnets` field configures the networks to pick kubelet node IP from.
            validSubnets:
                - 192.168.1.0/24
        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53

        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        # extraArgs:
        #     key: value

        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        # extraMounts:
        #     - destination: /var/lib/example # Destination is the absolute path where the mount will be placed in the container.
        #       type: bind # Type specifies the mount kind.
        #       source: /var/lib/example # Source specifies the source path of the mount.
        #       # Options are fstab style mount options.
        #       options:
        #         - bind
        #         - rshared
        #         - rw

        # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
        # credentialProviderConfig:
        #     apiVersion: kubelet.config.k8s.io/v1
        #     kind: CredentialProviderConfig
        #     providers:
        #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
        #           defaultCacheDuration: 12h
        #           matchImages:
        #             - '*.dkr.ecr.*.amazonaws.com'
        #             - '*.dkr.ecr.*.amazonaws.com.cn'
        #             - '*.dkr.ecr-fips.*.amazonaws.com'
        #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
        #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
        #           name: ecr-credential-provider
    # Provides machine specific network configuration options.
    network:
        hostname: srv3 # Used to statically set the hostname for the machine.
        # `interfaces` is used to define the network interface configuration.
        interfaces:
            - interface: enxbc2411068d56 # The interface name.
              # Assigns static IP addresses to the interface.
              addresses:
                - 192.168.1.22/24
              # A list of routes associated with the interface.
              routes:
                - network: 0.0.0.0/0 # The route's network (destination).
                  gateway: 192.168.1.1 # The route's gateway (if empty, creates link scope route).
              
              # # Picks a network device using the selector.

              # # select a device with bus prefix 00:*.
              # deviceSelector:
              #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
              # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
              # deviceSelector:
              #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
              #     driver: virtio # Kernel driver, supports matching by wildcard.
              # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
              # deviceSelector:
              #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
              #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
              #       driver: virtio # Kernel driver, supports matching by wildcard.

              # # Bond specific options.
              # bond:
              #     # The interfaces that make up the bond.
              #     interfaces:
              #         - enp2s0
              #         - enp2s1
              #     # Picks a network device using the selector.
              #     deviceSelectors:
              #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
              #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
              #           driver: virtio # Kernel driver, supports matching by wildcard.
              #     mode: 802.3ad # A bond option.
              #     lacpRate: fast # A bond option.

              # # Bridge specific options.
              # bridge:
              #     # The interfaces that make up the bridge.
              #     interfaces:
              #         - enxda4042ca9a51
              #         - enxae2a6774c259
              #     # A bridge option.
              #     stp:
              #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.

              # # Indicates if DHCP should be used to configure the interface.
              # dhcp: true

              # # DHCP specific options.
              # dhcpOptions:
              #     routeMetric: 1024 # The priority of all routes received via DHCP.

              # # Wireguard specific configuration.

              # # wireguard server example
              # wireguard:
              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
              #     listenPort: 51111 # Specifies a device's listening port.
              #     # Specifies a list of peer configurations to apply to a device.
              #     peers:
              #         - publicKey: ABCDEF... # Specifies the public key of this peer.
              #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
              #           allowedIPs:
              #             - 192.168.1.0/24
              # # wireguard peer example
              # wireguard:
              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
              #     # Specifies a list of peer configurations to apply to a device.
              #     peers:
              #         - publicKey: ABCDEF... # Specifies the public key of this peer.
              #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
              #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
              #           allowedIPs:
              #             - 192.168.1.0/24

              # # Virtual (shared) IP address configuration.

              # # layer2 vip example
              # vip:
              #     ip: 172.16.199.55 # Specifies the IP address to be used.
        # Used to statically set the nameservers for the machine.
        nameservers:
            - 192.168.1.1
            - 1.1.1.1
            - 8.8.8.8
        
        # # Allows for extra entries to be added to the `/etc/hosts` file
        # extraHostEntries:
        #     - ip: 192.168.1.100 # The IP of the host.
        #       # The host alias.
        #       aliases:
        #         - example
        #         - example.domain.tld

        # # Configures KubeSpan feature.
        # kubespan:
        #     enabled: true # Enable the KubeSpan feature.
    # Used to provide instructions for installations.
    install:
        disk: /dev/sda # The disk used for installations.
        image: ghcr.io/aenix-io/cozystack/talos:v1.8.3 # Allows for supplying the image used to perform the installation.
        wipe: false # Indicates if the installation disk should be wiped at installation time.
        
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.

        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k

        # # Allows for supplying additional system extension images to install on top of base Talos image.
        # extensions:
        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.
    # Allows the addition of user specified files.
    files:
        - content: "[plugins]\n  [plugins.\"io.containerd.grpc.v1.cri\"]\n    device_ownership_from_security_context = true\n  [plugins.\"io.containerd.cri.v1.runtime\"]\n    device_ownership_from_security_context = true      \n" # The contents of the file.
          permissions: 0o0 # The file's permissions in octal.
          path: /etc/cri/conf.d/20-customization.part # The path of the file.
          op: create # The operation to use
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry host namespace.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/

    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #             
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.

    # Features describe individual Talos features that can be switched on or off.
    features:
        rbac: true # Enable role-based access control (RBAC).
        stableHostname: true # Enable stable default hostname.
        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.
        diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.
        # KubePrism - local proxy/load balancer on defined port that will distribute
        kubePrism:
            enabled: true # Enable KubePrism support - will start local load balancing proxy.
            port: 7445 # KubePrism port.
        # Configures host DNS caching resolver.
        hostDNS:
            enabled: true # Enable host DNS caching resolver.
            forwardKubeDNSToHost: true # Use the host DNS resolver as upstream for Kubernetes CoreDNS pods.
        
        # # Configure Talos API access from Kubernetes pods.
        # kubernetesTalosAPIAccess:
        #     enabled: true # Enable Talos API access from Kubernetes pods.
        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
        #     allowedRoles:
        #         - os:reader
        #     # The list of Kubernetes namespaces Talos API access is available from.
        #     allowedKubernetesNamespaces:
        #         - kube-system
    # Configures the kernel.
    kernel:
        # Kernel modules to load.
        modules:
            - name: openvswitch # Module name.
            - name: drbd # Module name.
              # Module parameters, changes applied after reboot.
              parameters:
                - usermode_helper=disabled
            - name: zfs # Module name.
            - name: spl # Module name.
    # Configures the node labels for the machine.
    nodeLabels:
        node.kubernetes.io/exclude-from-external-load-balancers: ""
    
    # # Provides machine specific control plane configuration options.

    # # ControlPlane definition example.
    # controlPlane:
    #     # Controller manager machine specific configuration options.
    #     controllerManager:
    #         disabled: false # Disable kube-controller-manager on the node.
    #     # Scheduler machine specific configuration options.
    #     scheduler:
    #         disabled: true # Disable kube-scheduler on the node.

    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.

    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx

    # # Used to partition, format and mount additional disks.

    # # MachineDisks list example.
    # disks:
    #     - device: /dev/sdb # The name of the disk to use.
    #       # A list of partitions to create on the disk.
    #       partitions:
    #         - mountpoint: /var/mnt/extra # Where to mount the partition.
    #           
    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.

    #           # # Human readable representation.
    #           # size: 100 MB
    #           # # Precise value in bytes.
    #           # size: 1073741824

    # # The `env` field allows for the addition of environment variables.

    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/

    # # Used to configure the machine's time settings.

    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # description: |
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.

    # # Used to configure the machine's sysctls.

    # # MachineSysctls usage example.
    # sysctls:
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    #     net/ipv6/conf/eth0.100/disable_ipv6: "1"

    # # Used to configure the machine's sysfs.

    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance

    # # Machine system disk encryption configuration.
    # systemDiskEncryption:
    #     # Ephemeral partition encryption.
    #     ephemeral:
    #         provider: luks2 # Encryption provider to use for the encryption.
    #         # Defines the encryption keys generation and storage method.
    #         keys:
    #             - # Deterministically generated key from the node UUID and PartitionLabel.
    #               nodeID: {}
    #               slot: 0 # Key slot number for LUKS2 encryption.
    #               
    #               # # KMS managed encryption key.
    #               # kms:
    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
    #         
    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
    #         # cipher: aes-xts-plain64

    #         # # Defines the encryption sector size.
    #         # blockSize: 4096

    #         # # Additional --perf parameters for the LUKS2 encryption.
    #         # options:
    #         #     - no_read_workqueue
    #         #     - no_write_workqueue

    # # Configures the udev system.
    # udev:
    #     # List of udev rules to apply to the udev system
    #     rules:
    #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"

    # # Configures the logging system.
    # logging:
    #     # Logging destination.
    #     destinations:
    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
    #           format: json_lines # Logs format.

    # # Configures the seccomp profiles for the machine.
    # seccompProfiles:
    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
    #       # The `value` field is used to provide the seccomp profile.
    #       value:
    #         defaultAction: SCMP_ACT_LOG

    # # Configures the node annotations for the machine.

    # # node annotations example.
    # nodeAnnotations:
    #     customer.io/rack: r13a25

    # # Configures the node taints for the machine. Effect is optional.

    # # node taints example.
    # nodeTaints:
    #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
    id: v3KUPygwtpdOhjqOjce0vv4FIWeyzlXdJZsQSCzRHDI= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    secret: A+QM4T4XLc24tRWlcLw1Xf4EJlA8Q3YhLGTtrStbazo= # Shared secret of cluster (base64 encoded random 32 bytes).
    # Provides control plane specific configuration options.
    controlPlane:
        endpoint: https://192.168.1.20:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
    clusterName: talos # Configures the cluster's name.
    # Provides cluster specific network configuration options.
    network:
        # The CNI used.
        cni:
            name: none # Name of CNI to use.
        dnsDomain: cozy.local # The domain used by Kubernetes DNS.
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/16
    token: l74sj7.t383uzyagu4qi35e # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    secretboxEncryptionSecret: ToGYkh0Np3FIPdPszEYhqVpCiTBxNnqdfRLFJU2eJ+4= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVMrZ0F3SUJBZ0lRY0lSb3gzcWRjdFZTUmpjVVREdXVrekFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSTBNVEl5TnpFd016RTBOVm9YRFRNME1USXlOVEV3TXpFMApOVm93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCSHpGekV6TE9xMkdxYStyd0pWWTUrVmxqbzlqei9VQ2ZkdS82c0FTU21uVitUOFFiWk1ub2xtckFhUWgKbkgxS3pkTStFdzl0VHlNYjJ0ZDU5aDhXcldLallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVVaK3h0eGdWV1hvWE9NNUZCd21lcXJuaXU2TDB3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnVXp6R2s0a2EKaWRoY01ML1prRDdFTWhpTmgxMmdyMTNrVi8zb0tkYnhEa2NDSVFEQTlzcC9MUmhPSjZyVGxKRHVPbHV0c3k0Wgp0eDBRSGw2cHlPL2d1UTRBNHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUZtWWZDQlZZcjdia3E4UDFwSkZBRmYrZVpSSWNERzZUY1lCNmdsSEVjeENvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFZk1YTVRNczZyWWFwcjZ2QWxWam41V1dPajJQUDlRSjkyNy9xd0JKS2FkWDVQeEJ0a3llaQpXYXNCcENHY2ZVck4wejRURDIxUEl4dmExM24ySHhhdFlnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYekNDQVFXZ0F3SUJBZ0lRUEV6RXRZN3d1ajY0TUFFRkxmZ0VYVEFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJME1USXlOekV3TXpFME5Wb1hEVE0wTVRJeU5URXdNekUwTlZvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCS3VPN0hnV09qbEJwemZlSFVCalVhMVl4QzVoM0p4aFAycWtYelFIKzNoYU13Z0hYMUJiCkwwcjBGK1lkQW42SzQ1eWRYSVZ1WnB0UUZNSkh2N1BJV3FHallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVVoVWdKc1dRc1VCa1lTdXU5cHVjem8wUG0rS2t3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnCkRHRWJ0UWJ0TFEyZjVhRDBLblFQa2I2cFdwSGdFQkI0bXJvTnVEMmRsb1VDSVFETnVCNmlpa2xjOXRUOHpIc08KdjE0MHFYeTBwVHBFbXBBQytCMWRxVjhzeWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUMzTDhrL2gybjV3RlZLVXhoaDIwdEZZSXljd3owdVdHaUdJNUxYSFVxSHFvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFcTQ3c2VCWTZPVUduTjk0ZFFHTlJyVmpFTG1IY25HRS9hcVJmTkFmN2VGb3pDQWRmVUZzdgpTdlFYNWgwQ2ZvcmpuSjFjaFc1bW0xQVV3a2UvczhoYW9RPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS3dJQkFBS0NBZ0VBM3pnaWxtM0tqVERUZ25EZTV6SEsxNm1lOXp5VnArOG5FWWtYRXdIenJ3STlQbFNECnNJU0ZQY1drMUhzWm1zN1JlRzN0TmQ2Wkt5dTRISUc3UEgvUmhCUVRyckhLRGNTT1k4cndwdUZzcnkvUm1CRGkKN3d0NEJ5V3VCNjdxa284RHpBd05ldWlJYXlUYWorS3hBVFJxRzgwVUxZMm1qamRBZlhkOXhuOUZOMW5RUnZOdwpnWXpRNCtRRzlDNHBRbk8xdXlLTnZQckZDelpPdlFhUURlK2RNVlFnVmRSRGdrSWlBaWNSY0t1bko4S2RzNzA1Cm1EeWJ1S0xpYVZsYk8wd2RITGtQZzI3QW8xK0pxV2RIWTZXVCt0UXZiQzZpQTNIbmdIUkozMXhlWVhFZTRITEMKZStoVkIwaWJ3RWUzM1VHU05EZUxCdlJiV1lFWk5hMnJ5UG1IZnpkV1pPMzhXSjh3NE5qQitFN0lMTmE1SlFzcQpjK1c1ZlRhR1BDbG51eS9lTHhWQkNzRG43QXgvRjNzdVZnZGIwMWhHQUFNc3NSVWxidXg1WllKNGRldXEzY2RQClNLQnRWcmRmdjVJNzRGRGw3S01oTkdmam1KMGVXZlF2SzZHSXhRREdSeVVlcG52VStxZDRkUTYwYzVObEd5MGoKb1NaVDhOdktTT2tFaFQ2S2U0aC9HT3QyQjJZQmkwUUhyZXBXMGQvU3FDa0dwSXhCMENYeGxhYVQwM1lOczNHNQpab2s4MlFmUUZlTUlUMk5NUEdYa002c0hBV3ZUZ3RiTGhvdC9nUkIvb1VEbnpsZU9hSC9LbkhqLzhGcHhsQVh4Cms2TnludjJJQ0ZiLzdpdkVWUnZWaHdLRXF4ZVcrbDBiOTVoaFljRXZnUzhMb0NyTkFNVFQ4emhwR3VzQ0F3RUEKQVFLQ0FnRUFqZFlTakRscFNqdnJPZWhVaXQxbHdaR2pWQUFvTEJSWFk5b1RVbDJjSk9rc1Z5M0dtK1FvOGU1agpaU3h2UWFJSEVobnZiNXBwQXpoOWZZZWxuTFN2UWRpc0JRWXRtSC83NWtjdWtTdU9MdWNZckNLV3dFUXVXWVJFCng5Y0tjR1AxaXJOaDRXWmVRSTZqWG1neUJzenlXNFg5TzFEVnMycENUVGNmTVlEdlQxTi9kNFg2U0NkZEdHRnQKVmJ6N05LRm5xV2cwWGcrT0l5aTM4WDU1REpIajlWTTZWSzlTMGpNSmZ3cXFGMGpMSndXUHhZVUlVc2E0UUNNbgo4TDc1ckgwWnhvV0U2UVAzM2hlMzFtK3N1aEdkTFBXa3lIMzlMbWt6SzdrNHMzZnk5TUczVi9FenlSNEE0V2J1CnFNZ3BlYXJQcHVSZ0wrUVhJNUZYbm5jalA4bm1vT3g1ajdCcnlrMnE0YjBXbG93OEhwdXBXSll5eWdqUXlqSkoKRVlsSzNtMlk5R0hPNXhXazFsM2xNMVdTM20rRlM2dU90cVV5aGZkKzVWdWgyTWVhZGVUS3dDRVpMZDd2R0Z2Rwo4Nkt0bmZSMGJ0ODZ6NGpBRWxTN1R0bGhISVNuRDlvL21TTkNOd2xKUVNOa1V4UTZZUm1vdUQ0L1NYRGsrM1F3ClVweUZWeWpNWU5LcmhvWjBuNEQ2L3MzeVZGUXQwNlhmTnM0RENaa21NZUVtZDc5QnZablNyam4zUUtidTFpQk4KWkRuVmxLeExQVGhLME1LRldDSG5ianpZbFpSTWpmM3VTamtKbXJ4TTFVUkV1WWtwNjVuRDZXVjdmRm9iN0VXOApoQVFzN0dVM0Nhanc2UDFMcFphaXRTaDh2TDh4ang3cnIvd2JJK0FvZmFPR1ptT2lxV0VDZ2dFQkFPa012WWIxCm96L2M0ZktPenRqbW9VbFVVQm1pYW1CR0ZJZWZVYVF2ekM3MFBiNG8vMkpkd3F3V0dHd3luSldJdE54WnNZNEcKSzR0YTJXajZVaTcrUWFxbXZRT3ZpMERGQ1BQaUlxcmV1WStmUmlIemgrZzdCZzhQQWVSU3VzamhxSWRxd0hEawptT3V1VGs4M1UyRUV3Qnl5NzRFTTR5VFZBTTlVZnBuczZRdVlEMUVOMWEvTEFpRWgwSkVmblEyY2xqc1daeTgrCjFSRGtqR3M0TDhpZUFYZS9kc2hiYWE1UktucGRGQ0xMamkySVA5VitJeTMvUWJTU3lrSVpZRHdvOURNWGdvc3kKaDAwTnYwcFBnNjRDemFtM0FsWXFJc3lkaXBQSXlRTVMxTzVXUGpDSW5SQ1ptMCtUM1Q3eE81bEw4TkRoSDZlZApBeVgyZTNESGg3ZDBqM3NDZ2dFQkFQVXprS0hhMFN5MjlKMVpuZU9QZTdTWEx6UXBhRXl5d0twb0ZRY3ZyM1hSCmZvbUoyb1NaYTIxSklGWVhEKzVwVWM5MWY3R0VqdzN3VEwrcXNoQllZODJpMDNLMWMrOWVHSGpJMFp2RjA3VkUKZlpuc2pIcWxBYVcvbWU4clFpaFZQNFRjNUVIbVVvUTBaM08wemxiMFowUG9FUFlwc05GLzhaakhLblRwY2NmTQpqT1BqeFZCcU9GbmFMZThXOGVnT2JJZTdlekRwaFFLUlAyR0l4WnFHZ0p3QytxUERpbHoyTUFML2x6QmMxRWZDCmc2Q1kzRjR1ZDhubEN1Z0d0OVB4M3ZsVHIwdjZmTU81RjJvVUx0SHdWbjlJQnl6UjNKNlg2T3Z5TXdXL3R0eGQKV0RNUm8rRjUxT3JWL0h4YWNaQWh4dm5kNEZXcFJkaDdSKzduVWdLR2oxRUNnZ0VCQUpQai90NEhRWXJFYkNwVwpEOU83UDd6ZUlWcXpJOWhtZ0o2MExzWUhnd2FFL2kyUHJNbEtnTUJkNFMvQVNuZm1ZZ2UzYjZLV0xjbm9aREZuCk1RSWJYYWFpMnkzY2wzMEp6SzJmNHFvV1h5RlNUTm84eGhGTWE0TGczaTE3aG9iMkZOR2luKzdFVW5xMWlZSmgKdEtyTHJmSkladzY1RStnS3Q5SGFaK0RjWStOMG9ydW9FT1BXNjBvRlFHcm42ZTE2WWllckJ0NEhmSVNVMUxzeAowN2oyOUMxK3RpMWRQVXBldlpzYk9DMEFpZ0JCQjJrKys2b3o0d2xwWWFyaW1aeHp6TXdqYmpkUllHVTRoUnp1CktyMGhrRXZVRkVxRHdNT2ljZzlvaW85Rnd4UmdiR1MyUFI0TXJHK3FnT3R4Z0lXK21GcWxra1gyc01uRmlmNCsKME5STnhzTUNnZ0VCQU9WOXY0NWRHSTE3SnZMbVgyb09icitWQ0c4UG1qaSt6S2d4QmcxVnlpakJUR2M2Q0xVMgpTbDljbzlFdmdJK3BMeEsyYkM4ZlhDeTFqWCtPS1Y0Mi9DSUlsVksxRmE4aEtGSlQwaXF6T3ZSYkNCczZWRGl0Cm14OGdkdGhzYWwwSmZJdkRtamM3ZEZ1Y0dIOG82RDVtUFFoSGVTaUwySndiM1drYWIxaEE3V2NNd1lqQk0zbVMKRU8rM3ptb0oxWnRWZEtxTkJEM0JNZVkzUDFUd0I5SWF0T0JQd1hub2wrVnQzWDNRN2hZcnE5c0Y2T0EwY1h3TQpqYnoraS9paDRRZVRSeGVnQlY5ZEw4eVh2WnhoQzNrZU1qYXFtVnlQaHFkQWtwWFNkNEtYN25QTlFiRjZmeUdYClAzb1RrVjVwNEFRQU9SUy9YeW1OWm51NDFwaDVGRDZjNWlFQ2dnRUJBSjAraURhRGpEZGhmYmlCUjRhdXVEa2kKUTdoRFAxbHcyblVSYmFGR3FOV1NVaGJXajl1SDhMbEFiWG91WUs1Nkt3WDN1blpaZlB0ejJmK1AzQWU4M09tWApwYjdQWmhvTTNZZGhpcUdIZXFxUFp1Q250SDlWcFd2ZzZQSDhkNjVRUDRMclQ4ZHhyZW1ibW1xM3BjRVFXL0NJCnJKeFozOURyOFBjMWdZNThoYlU3WjQrU0RkcW0wT2YzRGg2eWtuR0VoTEJCKzR3c0JLd1ROZ3FPYkZnR2hESWYKYkwra2hkYytJTFVlRkVid2t5RzFDcDc5L0ltTEFQVWJBMzRRTEtYVzA2Y2Z4WSs4Z1UyMXNHdjhnVHhuVUdObwoyOXYvKzJqTVpwdVJUdk1ZalE0S2c2TVFYSzZxVGJaaWVveW1aVWozUitsWlVJTy8wL1pNSFN0ZS8zOTRNTUk9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
    # API server specific configuration options.
    apiServer:
        image: registry.k8s.io/kube-apiserver:v1.31.1 # The container image used in the API server manifest.
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 192.168.1.20
            - 127.0.0.1
        disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.
        # Configure the API server admission plugins.
        admissionControl:
            - name: PodSecurity # Name is the name of the admission controller.
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
    # Controller manager server specific configuration options.
    controllerManager:
        image: registry.k8s.io/kube-controller-manager:v1.31.1 # The container image used in the controller manager manifest.
        # Extra arguments to supply to the controller manager.
        extraArgs:
            bind-address: 0.0.0.0
    # Kube-proxy server-specific configuration options
    proxy:
        disabled: true # Disable kube-proxy deployment on cluster bootstrap.
        image: registry.k8s.io/kube-proxy:v1.31.1 # The container image used in the kube-proxy manifest.
    # Scheduler server specific configuration options.
    scheduler:
        image: registry.k8s.io/kube-scheduler:v1.31.1 # The container image used in the scheduler manifest.
        # Extra arguments to supply to the scheduler.
        extraArgs:
            bind-address: 0.0.0.0
    # Configures cluster member discovery.
    discovery:
        enabled: false # Enable the cluster membership discovery feature.
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                disabled: true # Disable Kubernetes discovery registry.
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNPZ0F3SUJBZ0lRYXN1NUlZcGpJYjExQ2YzUkZwdSsyakFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1JsZEdOa01CNFhEVEkwTVRJeU56RXdNekUwTlZvWERUTTBNVEl5TlRFd016RTBOVm93RHpFTgpNQXNHQTFVRUNoTUVaWFJqWkRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkhwQ0VrcHQrL3VwCnBhVGlZdENjTnd0RlJNTFVjR202SjhZZFNmNXN0dWN6djF0Sy9IT2V4UjZiOEpQNndtcWZFQ0loMzV4S2t5Q00KVUVRTnF3UTRQWW1qWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjRApBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVK3RFYXpFVU9EM2N5CmkrbEk4VHNhOHRENjlSZ3dDZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBTGlaekxKUFh3QnIxZzgra3dEQ2p5cmMKRE5BSWNmcGZ4MUx3VHZHZElLQmNBaUVBa1I5N3hXK0gyOWFQWG04MDhzU0NLMDU0NGYrenhWMzk1R0Vnd2txdgpNbVU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUplaUFxOW01OEkrVzF2NlBEelprYzZuUVNmYjdHZHUyakJIT0U3YTdkcUlvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFZWtJU1NtMzcrNm1scE9KaTBKdzNDMFZFd3RSd2Fib254aDFKL215MjV6Ty9XMHI4YzU3RgpIcHZ3ay9yQ2FwOFFJaUhmbkVxVElJeFFSQTJyQkRnOWlRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
        # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.
        advertisedSubnets:
            - 192.168.1.0/24
        
        # # The container image used to create the etcd service.
        # image: gcr.io/etcd-development/etcd:v3.5.16
    # A list of urls that point to additional manifests.
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml

    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci

    allowSchedulingOnControlPlanes: true # Allows running workload on control-plane nodes.
    
    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).

    # # Decryption secret example (do not use in production!).
    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=

    # # Core DNS specific configuration options.
    # coreDNS:
    #     image: registry.k8s.io/coredns/coredns:v1.11.3 # The `image` field is an override to the default coredns image.

    # # External cloud provider configuration.
    # externalCloudProvider:
    #     enabled: true # Enable external cloud provider.
    #     # A list of urls that point to additional manifests for an external cloud provider.
    #     manifests:
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml

    # # A map of key value pairs that will be added while fetching the extraManifests.
    # extraManifestHeaders:
    #     Token: "1234567"
    #     X-ExtraInfo: info

    # # Settings for admin kubeconfig generation.
    # adminKubeconfig:
    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
